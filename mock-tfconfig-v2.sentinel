import "strings"

providers = {
	"google": {
		"alias": "",
		"config": {
			"credentials": {
				"constant_value": null,
			},
			"project": {
				"constant_value": "prefab-breaker-319803",
			},
			"region": {
				"constant_value": "us-central1",
			},
		},
		"module_address":      "",
		"name":                "google",
		"provider_config_key": "google",
		"version_constraint":  "",
	},
}

resources = {
	"google_compute_address.static": {
		"address": "google_compute_address.static",
		"config": {
			"name": {
				"constant_value": "ipv4-address1",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "static",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_address",
	},
	"google_compute_instance.example": {
		"address": "google_compute_instance.example",
		"config": {
			"boot_disk": [
				{
					"initialize_params": [
						{
							"image": {
								"constant_value": "ubuntu-1604-lts",
							},
						},
					],
				},
			],
			"machine_type": {
				"constant_value": "f1-micro",
			},
			"name": {
				"constant_value": "instance01",
			},
			"network_interface": [
				{
					"subnetwork": {
						"references": [
							"google_compute_subnetwork.subnet.self_link",
							"google_compute_subnetwork.subnet",
						],
					},
				},
			],
			"zone": {
				"constant_value": "us-central1-a",
			},
		},
		"count": {},
		"depends_on": [
			"google_compute_network.vpc",
		],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_instance",
	},
	"google_compute_network.vpc": {
		"address": "google_compute_network.vpc",
		"config": {
			"auto_create_subnetworks": {
				"constant_value": "false",
			},
			"name": {
				"references": [
					"var.vpc_name",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "vpc",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_network",
	},
	"google_compute_subnetwork.subnet": {
		"address": "google_compute_subnetwork.subnet",
		"config": {
			"ip_cidr_range": {
				"references": [
					"var.subnet_cidr",
				],
			},
			"name": {
				"references": [
					"var.subnet_name",
				],
			},
			"network": {
				"references": [
					"google_compute_network.vpc.id",
					"google_compute_network.vpc",
				],
			},
			"region": {
				"references": [
					"var.region",
				],
			},
		},
		"count": {},
		"depends_on": [
			"google_compute_network.vpc",
		],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "subnet",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_subnetwork",
	},
}

provisioners = {}

variables = {
	"region": {
		"default":        "us-central1",
		"description":    "",
		"module_address": "",
		"name":           "region",
	},
	"subnet_cidr": {
		"default":        "10.12.0.0/24",
		"description":    "",
		"module_address": "",
		"name":           "subnet_cidr",
	},
	"subnet_name": {
		"default":        "testsubnet01",
		"description":    "",
		"module_address": "",
		"name":           "subnet_name",
	},
	"vpc_name": {
		"default":        "testvpc01",
		"description":    "",
		"module_address": "",
		"name":           "vpc_name",
	},
	"vpc_network_name": {
		"default":        "testnetwork",
		"description":    "",
		"module_address": "",
		"name":           "vpc_network_name",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
